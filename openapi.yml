openapi: 3.0.1

info:
  title: Todos Management Service
  description: Manages todos, topics, priorities and assignees.
  version: '1.0.0'

servers:
  - url: http://api.foo.de/v1
    description: Public URL

tags:
  - name: todos
    description: All operations to handle todos.

paths:
  /todos:
    get:
      tags:
        - todos
      summary: Get all todos.
      operationId: findAll
      responses:
        '200':
          description: The todos were found and returned.
          content:
            application/json:
              schema:
                type: array
                items:
                  $ref: '#/components/schemas/Todo'
    post:
      tags:
        - todos
      summary: Create a single todo.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '201':
          description: The todo was created and returned.
          headers:
            Location:
              description: The URL of the created todo.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: The given entity was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

  /todos/{id}:
    parameters:
      - $ref: '#/components/parameters/TodosIdParameter'
    get:
      tags:
        - todos
      summary: Find a single todo by id.
      operationId: findById
      responses:
        '200':
          description: The todo was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: A todo with the given id could not be found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    put:
      tags:
        - todos
      summary: Replace a single todo.
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '204':
          description: The todo was replaced.
        '404':
          description: A todo with the given id could not be found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '400':
          description: The given entity was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    delete:
      tags:
        - todos
      summary: Delete a single todo by id.
      operationId: delete
      responses:
        '204':
          description: The todo was deleted.
        '404':
          description: A todo with the given id could not be found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

components:
  schemas:
    Todo:
      required:
        - title
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          minLength: 1
          maxLength: 50
          type: string
          example: Do something meaningful
        description:
          type: string
          maxLength: 255
          example: Do something that makes a positive impact in someoneâ€™s life.
        due_date:
          type: string
          description: The day until this todo is due.
          format: date
          description: The day until the todo has to be completed.
          example: 2024-11-18T10:00:00
        status:
          type: string
          enum:
            - new
            - progress
            - completed
            - archived

    ProblemDetail:
      description: Problem details defined by RFC-9457 (https://datatracker.ietf.org/doc/rfc9457/)
      type: object
      properties:
        instance:
          type: string
          description: |-
            A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced.
          format: uri
        type:
          type: string
          description: |-
            A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type.  When
            this member is not present, its value is assumed to be
            "about:blank".
          format: uri
        title:
          type: string
          description: |-
            A short, human-readable summary of the problem
            type.  It SHOULD NOT change from occurrence to occurrence of the
            problem, except for purposes of localization (e.g., using
            proactive content negotiation; see [RFC7231], Section 3.4).
        detail:
          type: string
          description: |-
            A human-readable explanation specific to this
            occurrence of the problem.
        status:
          type: integer
          description: |-
            The HTTP status code ([RFC7231], Section 6)
            generated by the origin server for this occurrence of the problem.
          format: int32
          minimum: 100
          maximum: 599

  parameters:
    TodosIdParameter:
      name: id
      in: path
      description: The id of the todo.
      required: true
      schema:
        type: string
        format: uuid
