openapi: 3.0.1

info:
  title: Todos Management Service
  description: Manages todos, topics, priorities and assignees.
  version: '1.0.0'

servers:
  - url: http://api.foo.de/v1
    description: Public URL

tags:
  - name: todos
    description: All operations to handle todos.

paths:
  /todos:
    get:
      tags:
        - todos
      summary: Get all todos.
      operationId: findAll
      parameters:
        - $ref: '#/components/parameters/PaginationOffsetParameter'
        - $ref: '#/components/parameters/PaginationLimitParameter'
      responses:
        '200':
          description: The todos were found and returned.
          content:
            application/hal+json:
              schema:
                $ref: '#/components/schemas/PaginatedTodos'
    post:
      tags:
        - todos
      summary: Create a single todo.
      operationId: create
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '201':
          description: The todo was created and returned.
          headers:
            Location:
              description: The URL of the created todo.
              style: simple
              schema:
                type: string
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '400':
          description: The given entity was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

  /todos/{id}:
    parameters:
      - $ref: '#/components/parameters/TodosIdParameter'
    get:
      tags:
        - todos
      summary: Find a single todo by id.
      operationId: findById
      responses:
        '200':
          description: The todo was found and returned.
          content:
            application/json:
              schema:
                $ref: '#/components/schemas/Todo'
        '404':
          description: A todo with the given id could not be found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    put:
      tags:
        - todos
      summary: Replace a single todo.
      operationId: update
      requestBody:
        content:
          application/json:
            schema:
              $ref: '#/components/schemas/Todo'
        required: true
      responses:
        '204':
          description: The todo was replaced.
        '404':
          description: A todo with the given id could not be found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
        '400':
          description: The given entity was invalid.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'
    delete:
      tags:
        - todos
      summary: Delete a single todo by id.
      operationId: delete
      responses:
        '204':
          description: The todo was deleted.
        '404':
          description: A todo with the given id could not be found.
          content:
            application/problem+json:
              schema:
                $ref: '#/components/schemas/ProblemDetail'

components:
  schemas:
    Todo:
      required:
        - title
      type: object
      properties:
        id:
          type: string
          format: uuid
          readOnly: true
        title:
          minLength: 1
          maxLength: 50
          type: string
          example: Do something meaningful
        description:
          type: string
          maxLength: 255
          example: Do something that makes a positive impact in someoneâ€™s life.
        due_date:
          type: string
          format: date
          description: The day until this todo is due.
          example: 2024-11-18T10:00:00
        status:
          type: string
          enum:
            - new
            - progress
            - completed
            - archived

    ProblemDetail:
      description: Problem details defined by RFC-9457 (https://datatracker.ietf.org/doc/rfc9457/)
      type: object
      properties:
        instance:
          type: string
          format: uri
          description: |-
            A URI reference that identifies the specific
            occurrence of the problem.  It may or may not yield further
            information if dereferenced.
          example: /todo/3fa85f64-5717-4562-b3fc-2c963f66afa6
        type:
          type: string
          format: uri
          description: |-
            A URI reference [RFC3986] that identifies the
            problem type.  This specification encourages that, when
            dereferenced, it provide human-readable documentation for the
            problem type.  When
            this member is not present, its value is assumed to be
            "about:blank".
          example: about:blank
        title:
          type: string
          description: |-
            A short, human-readable summary of the problem
            type.  It SHOULD NOT change from occurrence to occurrence of the
            problem, except for purposes of localization (e.g., using
            proactive content negotiation; see [RFC7231], Section 3.4).
          example: A todo with the given ID does not exist.
        detail:
          type: string
          description: |-
            A human-readable explanation specific to this
            occurrence of the problem.
          example: A todo with the given ID does not exist.
        status:
          type: integer
          format: int32
          description: |-
            The HTTP status code ([RFC7231], Section 6)
            generated by the origin server for this occurrence of the problem.
          minimum: 100
          maximum: 599
          example: 404

    Link:
      type: object
      properties:
        href:
          type: string
          description: indicates the target resource URI
        rel:
          type: string
          description: describes how the current context is related to the target sourcen
        type:
          type: string
          description: indicates the expected resource media type (GET, POST, PUT, DELETE)
      required:
        - href

    Links:
      type: object
      description: alternate HATEOAS (HAL) navigation
      properties:
        self:
          $ref: '#/components/schemas/Link'
        next:
          $ref: '#/components/schemas/Link'
        prev:
          $ref: '#/components/schemas/Link'
        first:
          $ref: '#/components/schemas/Link'
        last:
          $ref: '#/components/schemas/Link'

    PaginationLimit:
      type: integer
      minimum: 1
      maximum: 100

    PaginationOffset:
      type: integer
      minimum: 0
    Pagination:
      type: object
      description: default page navigation
      properties:
        total_elements:
          type: integer
          description: Number of all elements of the return list
          minimum: 0
        limit:
          $ref: '#/components/schemas/PaginationLimit'
        offset:
          $ref: '#/components/schemas/PaginationOffset'
      required:
        - total_elements

    PaginatedTodos:
      type: object
      properties:
        items:
          type: array
          items:
            $ref: '#/components/schemas/Todo'
        pagination:
          $ref: '#/components/schemas/Pagination'
        _links:
          $ref: '#/components/schemas/Links'
      required:
        - items
        - pagination
      example: {
        "items": [
          {
            "id": "3fa85f64-5717-4562-b3fc-2c963f66afa6",
            "title": "Contact Support",
            "description": "It's important to contact the support.",
            "due_date": "2025-01-15",
            "status": "new"
          },
          {
            "id": "5d55b4be-9b8b-4f7f-86d9-9fe58d808273",
            "title": "Read documentation",
            "description": "We should read the documentation!",
            "due_date": "2024-10-25",
            "status": "progress"
          }
        ],
        "pagination": {
          "total_elements": 1576,
          "limit": 2,
          "offset": 160
        },
        "_links": {
          "self": {
            "href": "https://my.api.com/todos?offset=160&limit=2"
          },
          "next": {
            "href": "https://my.api.com/todos?offset=162&limit=2"
          },
          "prev": {
            "href": "https://my.api.com/todos?offset=158&limit=2"
          },
          "first": {
            "href": "https://my.api.com/todos?offset=0&limit=2"
          },
          "last": {
            "href": "https://my.api.com/todos?offset=1574&limit=2"
          }
        }
      }

  parameters:
    TodosIdParameter:
      name: id
      in: path
      description: The id of the todo.
      required: true
      schema:
        type: string
        format: uuid

    PaginationOffsetParameter:
      name: offset
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/PaginationOffset'

    PaginationLimitParameter:
      name: limit
      in: query
      required: true
      schema:
        $ref: '#/components/schemas/PaginationLimit'
